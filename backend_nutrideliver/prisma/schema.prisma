generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model alergia {
  idAlergia      Int              @id @default(autoincrement())
  nombre         String           @db.VarChar(45)
  descripcion    String           @db.VarChar(45)
  alergiausuario alergiausuario[]

  @@index([nombre], map: "index_alergia_nombre")
}

model alergiausuario {
  idAlergiaUsuario  Int     @id @default(autoincrement())
  Alergia_idAlergia Int
  Cliente_idCliente Int
  alergia           alergia @relation(fields: [Alergia_idAlergia], references: [idAlergia], onDelete: NoAction, onUpdate: NoAction, map: "fk_AlergiaUsuario_Alergia1")
  cliente           cliente @relation(fields: [Cliente_idCliente], references: [idCliente], onDelete: NoAction, onUpdate: NoAction, map: "fk_AlergiaUsuario_Cliente1")

  @@index([Alergia_idAlergia], map: "fk_AlergiaUsuario_Alergia1_idx")
  @@index([Cliente_idCliente], map: "fk_AlergiaUsuario_Cliente1_idx")
}

model banco {
  idBanco        Int              @id
  nombreBanco    String           @unique(map: "nombreBanco_UNIQUE") @db.VarChar(200)
  cuentabancaria cuentabancaria[]
}

model bebida {
  idBebida  Int    @id @default(autoincrement())
  nombre    String @db.VarChar(200)
  tamanioMl Float  @db.Float
  calorias  Float  @db.Float
  foto      Bytes  @db.Blob
  menu      menu[]

  @@index([nombre], map: "index_bebida_nombre")
}

model categoria {
  idCategoria Int    @id @default(autoincrement())
  nombre      String @db.VarChar(200)
  descripcion String @db.VarChar(500)
  menu        menu[]
}

model cliente {
  idCliente        Int                @id @default(autoincrement())
  nombreCompleto   String             @db.VarChar(200)
  correo           String             @unique(map: "correo_UNIQUE") @db.VarChar(255)
  fechaNacimiento  DateTime           @db.Date
  rfc              String             @unique(map: "rfc_UNIQUE") @db.Char(13)
  password         String             @db.Char(64)
  alergiausuario   alergiausuario[]
  cuentabancaria   cuentabancaria[]
  direccionentrega direccionentrega[]
  pedido           pedido[]
  suscripcion      suscripcion[]
}

model cuentabancaria {
  idCuentaBancaria  Int      @id @default(autoincrement())
  nombrePago        String   @db.VarChar(45)
  numeroTarjeta     Int      @unique(map: "numeroTarjeta_UNIQUE")
  cvv               Int
  fechaExpiracion   DateTime @db.Date
  Banco_idBanco     Int
  Cliente_idCliente Int
  banco             banco    @relation(fields: [Banco_idBanco], references: [idBanco], onDelete: NoAction, onUpdate: NoAction, map: "fk_CuentaBancaria_Banco1")
  cliente           cliente  @relation(fields: [Cliente_idCliente], references: [idCliente], onDelete: NoAction, onUpdate: NoAction, map: "fk_CuentaBancaria_Cliente1")
  recibo            recibo[]

  @@index([Banco_idBanco], map: "fk_CuentaBancaria_Banco1_idx")
  @@index([Cliente_idCliente], map: "fk_CuentaBancaria_Cliente1_idx")
}

model direccionentrega {
  idDireccionEntrega Int      @id @default(autoincrement())
  calle              String   @db.VarChar(200)
  colonia            String   @db.VarChar(200)
  numeroExterior     String   @db.VarChar(45)
  numeroInterior     String?  @db.VarChar(45)
  piso               Int
  modulo             String?  @db.VarChar(45)
  Cliente_idCliente  Int
  cliente            cliente  @relation(fields: [Cliente_idCliente], references: [idCliente], onDelete: NoAction, onUpdate: NoAction, map: "fk_DireccionEntrega_Cliente1")
  pedido             pedido[]

  @@index([Cliente_idCliente], map: "fk_DireccionEntrega_Cliente1_idx")
}

model estatussuscripcion {
  idEstatusSuscripcion        Int                           @id @default(autoincrement())
  nombre                      String                        @db.VarChar(45)
  descripcion                 String                        @db.VarChar(500)
  historicoestatussuscripcion historicoestatussuscripcion[]
  suscripcion                 suscripcion[]
}

model historicoestatussuscripcion {
  idHistoricoEstatusSuscripcion           Int                @id @default(autoincrement())
  fechaEstatus                            DateTime           @db.DateTime(0)
  Suscripcion_idSuscripcion               Int
  EstatusSuscripcion_idEstatusSuscripcion Int
  estatussuscripcion                      estatussuscripcion @relation(fields: [EstatusSuscripcion_idEstatusSuscripcion], references: [idEstatusSuscripcion], onDelete: NoAction, onUpdate: NoAction, map: "fk_HistoricoEstatusSuscripcion_EstatusSuscripcion1")
  suscripcion                             suscripcion        @relation(fields: [Suscripcion_idSuscripcion], references: [idSuscripcion], onDelete: NoAction, onUpdate: NoAction, map: "fk_HistoricoEstatusSuscripcion_Suscripcion1")

  @@index([EstatusSuscripcion_idEstatusSuscripcion], map: "fk_HistoricoEstatusSuscripcion_EstatusSuscripcion1_idx")
  @@index([Suscripcion_idSuscripcion], map: "fk_HistoricoEstatusSuscripcion_Suscripcion1_idx")
}

model menu {
  idMenu                Int       @id
  nombre                String    @db.VarChar(200)
  Bebida_idBebida       Int
  Platillo_idPlatillo   Int
  Categoria_idCategoria Int
  bebida                bebida    @relation(fields: [Bebida_idBebida], references: [idBebida], onDelete: NoAction, onUpdate: NoAction, map: "fk_Menu_Bebida1")
  categoria             categoria @relation(fields: [Categoria_idCategoria], references: [idCategoria], onDelete: NoAction, onUpdate: NoAction, map: "fk_Menu_Categoria1")
  platillo              platillo  @relation(fields: [Platillo_idPlatillo], references: [idPlatillo], onDelete: NoAction, onUpdate: NoAction, map: "fk_Menu_Platillo1")
  pedido                pedido[]

  @@index([Bebida_idBebida], map: "fk_Menu_Bebida1_idx")
  @@index([Categoria_idCategoria], map: "fk_Menu_Categoria1_idx")
  @@index([Platillo_idPlatillo], map: "fk_Menu_Platillo1_idx")
}

model pedido {
  idPedido                            Int              @id @default(autoincrement())
  cantidad                            Int
  monto                               Float            @db.Float
  fechaEmision                        DateTime         @default(now()) @db.DateTime(0)
  esMensual                           Int              @db.TinyInt
  esAnual                             Int              @db.TinyInt
  codigoQR                            Bytes            @db.Blob
  horaEntrega                         DateTime         @db.DateTime(0)
  Menu_idMenu                         Int
  DireccionEntrega_idDireccionEntrega Int
  Cliente_idCliente                   Int
  Repartidor_idRepartidor             Int
  cliente                             cliente          @relation(fields: [Cliente_idCliente], references: [idCliente], onDelete: NoAction, onUpdate: NoAction, map: "fk_Pedido_Cliente1")
  direccionentrega                    direccionentrega @relation(fields: [DireccionEntrega_idDireccionEntrega], references: [idDireccionEntrega], onDelete: NoAction, onUpdate: NoAction, map: "fk_Pedido_DireccionEntrega1")
  menu                                menu             @relation(fields: [Menu_idMenu], references: [idMenu], onDelete: NoAction, onUpdate: NoAction, map: "fk_Pedido_Menu1")
  repartidor                          repartidor       @relation(fields: [Repartidor_idRepartidor], references: [idRepartidor], onDelete: NoAction, onUpdate: NoAction, map: "fk_Pedido_Repartidor1")
  recibo                              recibo[]

  @@index([Cliente_idCliente], map: "fk_Pedido_Cliente1_idx")
  @@index([DireccionEntrega_idDireccionEntrega], map: "fk_Pedido_DireccionEntrega1_idx")
  @@index([Menu_idMenu], map: "fk_Pedido_Menu1_idx")
  @@index([Repartidor_idRepartidor], map: "fk_Pedido_Repartidor1_idx")
}

model platillo {
  idPlatillo  Int    @id @default(autoincrement())
  nombre      String @db.VarChar(200)
  calorias    Float  @db.Float
  descripcion String @db.VarChar(500)
  foto        Bytes  @db.Blob
  menu        menu[]

  @@index([nombre], map: "index_nombre")
}

model recibo {
  idRecibo                        Int            @id @default(autoincrement())
  fecha                           DateTime       @default(now()) @db.DateTime(0)
  firma                           String         @db.VarChar(100)
  Pedido_idPedido                 Int
  CuentaBancaria_idCuentaBancaria Int
  cuentabancaria                  cuentabancaria @relation(fields: [CuentaBancaria_idCuentaBancaria], references: [idCuentaBancaria], onDelete: NoAction, onUpdate: NoAction, map: "fk_Recibo_CuentaBancaria1")
  pedido                          pedido         @relation(fields: [Pedido_idPedido], references: [idPedido], onDelete: NoAction, onUpdate: NoAction, map: "fk_Recibo_Pedido1")

  @@index([CuentaBancaria_idCuentaBancaria], map: "fk_Recibo_CuentaBancaria1_idx")
  @@index([Pedido_idPedido], map: "fk_Recibo_Pedido1_idx")
}

model repartidor {
  idRepartidor   Int      @id
  nombreCompleto String   @db.VarChar(200)
  foto           Bytes    @db.Blob
  pedido         pedido[]
}

model suscripcion {
  idSuscripcion                           Int                           @id
  fechaExpiracion                         DateTime?                     @db.DateTime(0)
  fechaInicio                             DateTime                      @default(now()) @db.DateTime(0)
  Cliente_idCliente                       Int
  EstatusSuscripcion_idEstatusSuscripcion Int
  historicoestatussuscripcion             historicoestatussuscripcion[]
  cliente                                 cliente                       @relation(fields: [Cliente_idCliente], references: [idCliente], onDelete: NoAction, onUpdate: NoAction, map: "fk_Suscripcion_Cliente1")
  estatussuscripcion                      estatussuscripcion            @relation(fields: [EstatusSuscripcion_idEstatusSuscripcion], references: [idEstatusSuscripcion], onDelete: NoAction, onUpdate: NoAction, map: "fk_Suscripcion_EstatusSuscripcion1")

  @@index([Cliente_idCliente], map: "fk_Suscripcion_Cliente1_idx")
  @@index([EstatusSuscripcion_idEstatusSuscripcion], map: "fk_Suscripcion_EstatusSuscripcion1_idx")
}
